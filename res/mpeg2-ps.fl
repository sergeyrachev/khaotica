MPEG2_program_stream() {
    do {
        pack()
    } while (nextbits() == '0000 0000 0000 0000 0000 0001 1011 1010')
    MPEG_program_end_code                    32             bslbf
}

pack() {
    pack_header()
    while (nextbits() == '0000 0000 0000 0000 0000 0001 1011 1100'
    || nextbits() == '0000 0000 0000 0000 0000 0001 1011 1101'
    || nextbits() == '0000 0000 0000 0000 0000 0001 1011 1110'
    || nextbits() == '0000 0000 0000 0000 0000 0001 1011 1111'
    || nextbits() == '0000 0000 0000 0000 0000 0001 110'
    || nextbits() == '0000 0000 0000 0000 0000 0001 1110'
    || nextbits() == '0000 0000 0000 0000 0000 0001 1111'
    ) {
        PES_packet()
    }
}

pack_header() {
    pack_start_code 32 bslbf
    zero_one 2 bslbf
    system_clock_reference_base [32..30] 3 bslbf
    marker_bit 1 bslbf
    system_clock_reference_base [29..15] 15 bslbf
    marker_bit 1 bslbf
    system_clock_reference_base [14..0] 15 bslbf
    marker_bit 1 bslbf
    system_clock_reference_extension 9 uimsbf
    marker_bit 1 bslbf
    program_mux_rate 22 uimsbf
    marker_bit 1 bslbf
    marker_bit 1 bslbf
    reserved 5 bslbf
    pack_stuffing_length 3 uimsbf
    for (i = 0; i < pack_stuffing_length; i++) {
        stuffing_byte 8 bslbf
    }
    if (nextbits() == '0000 0000 0000 0000 0000 0001 1011 1011') {
        system_header ()
    }
}

system_header () {
    system_header_start_code 32 bslbf
    header_length 16 uimsbf
    marker_bit 1 bslbf
    rate_bound 22 uimsbf
    marker_bit 1 bslbf
    audio_bound 6 uimsbf
    fixed_flag 1 bslbf
    CSPS_flag 1 bslbf
    system_audio_lock_flag 1 bslbf
    system_video_lock_flag 1 bslbf
    marker_bit 1 bslbf
    video_bound 5 uimsbf
    packet_rate_restriction_flag 1 bslbf
    reserved_bits 7 bslbf
    while (nextbits () == '1') {
        stream_id 8 bslbf
        if (stream_id == '1011 0111') {
            one_one 2 bslbf
            seven_zeros 7 bslbf
            stream_id_extension 7 uimsbf
            some_bits 8 bslbf
            another_one_one 2 bslbf
            P-STD_buffer_bound_scale 1 bslbf
            P-STD_buffer_size_bound 13 uimsbf
        } else {
            one_one_again 2 bslbf
            P-STD_buffer_bound_scale 1 bslbf
            P-STD_buffer_size_bound 13 uimsbf
        }
    }
}

PES_packet() {
    packet_start_code_prefix 24 bslbf
    stream_id 8 uimsbf
    PES_packet_length 16 uimsbf
    for (i = 0; i < PES_packet_length; i++) {
        payload 8 bslbf
    }
}
