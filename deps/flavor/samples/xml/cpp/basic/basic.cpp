/* @flavorc
 *
 * basic.cpp
 * 
 * This file was automatically generated by flavorc
 * from the source file:
 *     '..\\..\\..\\fl\\basic.fl'
 *
 * For information on flavorc, visit the Flavor Web site at:
 *     http://flavor.sourceforge.net
 *
 * -- Do not edit by hand --
 *
 */

#include <flavor.h>
#include "basic.h"


int Basic::putxml(IBitstream &_F_bs, short int bAttr) {
    int _F_ret = 0;
    int _F_dim0, _F_dim0_end;
    int _F_parse = 0;
    _F_dim0 = 0;
    _F_parse = 8;
    abc[_F_dim0] = _F_bs.sgetbits(_F_parse);
    if (abc[_F_dim0] != 66) {
        flerror("Const value mismatch for 'abc[%d]'", _F_dim0);
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    _F_dim0 = 1;
    _F_parse = 8;
    abc[_F_dim0] = _F_bs.sgetbits(_F_parse);
    if (abc[_F_dim0] != 65) {
        flerror("Const value mismatch for 'abc[%d]'", _F_dim0);
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    _F_dim0 = 2;
    _F_parse = 8;
    abc[_F_dim0] = _F_bs.sgetbits(_F_parse);
    if (abc[_F_dim0] != 83) {
        flerror("Const value mismatch for 'abc[%d]'", _F_dim0);
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    _F_dim0 = 3;
    _F_parse = 8;
    abc[_F_dim0] = _F_bs.sgetbits(_F_parse);
    if (abc[_F_dim0] != 73) {
        flerror("Const value mismatch for 'abc[%d]'", _F_dim0);
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    _F_dim0 = 4;
    _F_parse = 8;
    abc[_F_dim0] = _F_bs.sgetbits(_F_parse);
    if (abc[_F_dim0] != 67) {
        flerror("Const value mismatch for 'abc[%d]'", _F_dim0);
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<abc type=\"flSChar\" bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
        else {
            WriteXmlElement("<abc bitLen=\"%d\">%c</abc>", _F_parse, abc[_F_dim0]);
        }
    }
    _F_parse = 13;
    num1 = _F_bs.getbits(_F_parse);
    if (num1 != 4080) {
        flerror("Const value mismatch for 'num1'");
        _F_ret++;
        if (bAttr) {
            WriteXmlElement("<num1 type=\"flUInt\" bitLen=\"%d\">%u</num1>", _F_parse, num1);
        }
        else {
            WriteXmlElement("<num1 bitLen=\"%d\">%u</num1>", _F_parse, num1);
        }
    }
    else {
        if (bAttr) {
            WriteXmlElement("<num1 type=\"flUInt\" bitLen=\"%d\">%u</num1>", _F_parse, num1);
        }
        else {
            WriteXmlElement("<num1 bitLen=\"%d\">%u</num1>", _F_parse, num1);
        }
    }
    _F_parse = 8;
    next_parse_len = _F_bs.getbits(_F_parse);
    if (bAttr) {
        WriteXmlElement("<next_parse_len type=\"flUInt\" bitLen=\"%d\">%u</next_parse_len>", _F_parse, next_parse_len);
    }
    else {
        WriteXmlElement("<next_parse_len bitLen=\"%d\">%u</next_parse_len>", _F_parse, next_parse_len);
    }
    _F_bs.align(16);
    _F_parse = next_parse_len;
    num2 = _F_bs.little_sgetbits(_F_parse);
    if (bAttr) {
        WriteXmlElement("<num2 type=\"flSInt\" aligned=\"16\" big=\"false\" bitLen=\"%d\">%d</num2>", _F_parse, num2);
    }
    else {
        WriteXmlElement("<num2 aligned=\"16\" big=\"false\" bitLen=\"%d\">%d</num2>", _F_parse, num2);
    }
    if (num2<0) {
        _F_parse = 8;
        num3 = _F_bs.getbits(_F_parse);
        if (bAttr) {
            WriteXmlElement("<num3 type=\"flUInt\" bitLen=\"%d\">%u</num3>", _F_parse, num3);
        }
        else {
            WriteXmlElement("<num3 bitLen=\"%d\">%u</num3>", _F_parse, num3);
        }
    }
    else {
        _F_parse = 16;
        num3 = _F_bs.getbits(_F_parse);
        if (bAttr) {
            WriteXmlElement("<num3 type=\"flUInt\" bitLen=\"%d\">%u</num3>", _F_parse, num3);
        }
        else {
            WriteXmlElement("<num3 bitLen=\"%d\">%u</num3>", _F_parse, num3);
        }
    }
    
    return _F_ret;
}
