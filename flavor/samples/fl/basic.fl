/*
 * Copyright (c) 1997-2005 Alexandros Eleftheriadis and Danny Hong.
 *
 * This file is part of Flavor, developed at Columbia University
 * (http://flavor.sourceforge.net).
 *
 * Flavor is free software; you can redistribute it and/or modify
 * it under the terms of the Flavor Artistic License as described in
 * the file COPYING.txt. 
 *
 */

/*
 * Authors:
 * Danny Hong <danny@ee.columbia.edu>
 *
 */

/* 
 * A simple bitstream syntax that demonstrates how to link your code 
 * to the Flavor-generated code. 
 *
 */


// %prama trace

class Basic
{
    /* Character array.  Below means that the first 5 bytes of the Basic
     * object will represent the characters 'B', 'A','S','I', and 'C'.
     */
    char(8) abc[5] = "BASIC";

    /* Following the required 5 bytes ("BASIC") is an unsigned integer 
     * represented using 13 bits, whose value must equal to 0xFF0.
     */
    unsigned int(13) num1 = 0xFF0;

    /* Then, we parse the variable 'next_parse_len', whose value determines
     * the number of bits used to represent the following variable 'num2';
     * 'num2' is a signed integer in little-endian byte ordering, and it is
     * 16-bit (2-byte) aligned.
     */
    bit(8) next_parse_len;
    aligned(16) little int(next_parse_len) num2; 

    /* Lastly, depending on the value of 'num2', parse 'num3' with 8 bits
     * or 16 bits.
     */
    if (num2 < 0) 
        unsigned int(8) num3; 
    else 
        unsigned int(16) num3;

};  // <---- The trailing ';' in class declarations is optional
