/*
 * Copyright (c) 1997-2004 Alexandros Eleftheriadis, Danny Hong and 
 * Yuntai Kyong.
 *
 * This file is part of Flavor, developed at Columbia University
 * (http://flavor.sourceforge.net).
 *
 * Flavor is free software; you can redistribute it and/or modify
 * it under the terms of the Flavor Artistic License as described in
 * the file COPYING.txt. 
 *
 */

/*
 * Authors:
 * Danny Hong <danny@ee.columbia.edu>
 *
 */
 
/*
 * A bitstream polymorphism example.
 *
 */


// Enable tracing
%pragma trace

// The base class
class Base : unsigned int(2) id = 0 {
    bit(32) marker1 = 0xFFFF;
    bit(5) marker2 = 0b1010.1;
    unsigned int(4) length;
    char(8) data[length];
}

/* If we make the base class an abstract class, then no
 * object of the base class type will appear in the bitstream
 * and we can use all possible values of the ID in for the 
 * derived classes.
 */

// The first derived class
class Derived1 extends Base : unsigned int(2) id = 1 {
    // All the members of the base class will be placed here.
    
    int(8) d1 = 1; 
}

// The second derived class
class Derived2 extends Base : unsigned int(2) id = 2 { 
    // All the members of the base class will be placed here.

    float(32) d2 = 2.1;  
}

class PolyTest {
    Base b[3]; 
}    

