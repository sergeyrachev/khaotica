<html>

<head>
<title>Flavor Source Code</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
<link href="./css/txt.css" rel="stylesheet" type="text/css"/>
</head>


<body topmargin="20" leftmargin="5" bgcolor="white" link="red" alink="#003399" vlink="#003399">

<h1>Flavor Source Code</h1>

<p>
The distribution includes the source code for the Flavor translator and the libraries. The
translator and the library for the Win32 platform is already included in the <code>bin</code>
and <code>lib</code> directories, respectively.  For other platforms, just go through the
steps described <a href="#build">below</a> for building the code.  The code can be rebuilt
in Win32 platforms, as well.
</p>


<h2><a name="build">Building the Source Code</a></h2>


<h4>Win32 Platform</h4>

<p>
Each of the Flavor translator and the C++ Flavor libraries has a project file in a corresponding
directory (<code>src\flavorc\flavorc.dsp</code>, <code>src\lib\cpp\lib.dsp</code>, and
<code>src\lib\buffbitstream\cpp\libmp3.dsp</code>) and they are included in the source workspace 
(<code>src\src.dsw</code>).  The workspace is created using Microsoft Developer Studio v. 6 
and each project is set up so that all the necessary files are created, linked and copied with 
just a click of the build button in the Developer Studio environment.  The environment is already
set up so that all the include files, the library files and the translator executable file are 
automatically copied to corresponding directories every time the build is complete.
</p>

<p>
The Java Flavor library source code comes with a batch file that automates the building process
in the Win32 environment.  The <code>build.bat</code> file in the <code>src\lib\java</code> and <code>
src\lib\buffbitstream\java</code> directories can be executed to create the library files in 
the library (<code>lib\java</code>) directory.  The code is developed using Java v. 1.3 and it 
compiles well with Java v. 1.2.2 or higher.
</p>  


<h4>UNIX/Linux Platform</h4>

<p>
The process for building the Flavor libraries (both C++ and Java) and the Flavor translator is
automated with the use of <code>Makefiles</code>.  The files (<code>Makefile.in</code>) for 
generating the Makefiles are included with the source code, and a script file (<code>configure</code>) 
can be executed to generate the Makefiles. The steps for generating the Flavor libraries and the 
Flavor translator are as follows:
</p>
   <ol>
    <li>chmod +x configure</li>
    <li>configure</li>
    <li>cd src</li>
    <li>make</li>
   </ol>

<p>
The Makefiles are set up so that all the include files, library files and the translator
executable file are automatically copied to corresponding directories during the make process.
</p>


<h4>Building <em>bitgen</em></a></h4>

<p>
The software (in <code>src\bitgen</code>) is implemented using the <a target="_blank"
href="http://xml.apache.org">Xerces-C++ Version 2.2.0</a> XML parser.  The main <code>
.cpp</code> file is provided; however the Xerces-C++ package must be downloaded as the 
main file includes Xerces-C++ header files.  Also the parser library must be linked when 
recompiling.  The main file is directly modified from the <code>DOMPrint.cpp</code> file
in the <code>DOMPrint</code> sample of the Xerces-C++ package.  Hence, <code>bitgen</code>
can be built in exactly the same way as <code>DOMPrint</code>.
</p>


<p align="center" class="notice"><a href='copyright.htm'>Copyright Notice</a></p>
<p>&nbsp;</p>

</body>

</html>
