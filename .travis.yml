language: cpp
os:
    - linux

dist: trusty

cache:
  directories:
  - $HOME/deps/

notifications:
  email: false
  
before_install:
    - sudo add-apt-repository ppa:josh-bialkowski/cmake -y 
    - sudo apt-get update -qq 
    - sudo apt-get install -y bison flex cmake

install:
    - |
      if [ ! -f "${HOME}/deps/cached.marker" ]; then
        mkdir -p $HOME/deps/llvm && mkdir -p $HOME/deps/boost && mkdir -p build/llvm
        
        pushd build
            wget http://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz
            tar xfJ llvm-3.9.1.src.tar.xz
        
            pushd llvm
                cmake -DCMAKE_INSTALL_PREFIX=$HOME/deps/llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_EH=ON -DLLVM_ENABLE_RTTI=ON  -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_INCLUDE_TOOLS=Off -DLLVM_BUILD_TOOLS=Off -DLLVM_INCLUDE_EXAMPLES=Off -DLLVM_INCLUDE_TESTS=Off ../llvm-3.9.1.src
                travis_wait 90 cmake --build . --target install -- -j12
            popd
        
            wget https://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.gz
            tar xfz boost_1_63_0.tar.gz
        
            pushd boost_1_63_0
                bootstrap
                travis_wait 90 b2 -j12 -d0 --prefix=$HOME/deps/boost variant=release threading=multi link=static install
            popd
        popd    
        touch ${HOME}/deps/cached.marker
      else
        echo 'Using cached Boost and LLVM libraries.'
      fi

script:
    - cmake -DLLVM_ROOT=${HOME}/deps/llvm -DBOOST_ROOT=${HOME}/deps/boost -DCMAKE_INSTALL_PREFIX=$HOME/khaotica .
    - cmake --build . --target install -- -j12

deploy:
  provider: releases
  api_key: $DEPLOY_TOKEN
  file_glob: true
  file: $HOME/khaotica/*
  skip_cleanup: true
  on:
    tags: true
